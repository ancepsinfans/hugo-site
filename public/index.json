[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eEste archivo existe únicamente para responder a la URL /search con la plantilla de diseño \u003ccode\u003esearch\u003c/code\u003e relacionada.\u003c/p\u003e\n\u003cp\u003eNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\u003c/p\u003e\n\u003cp\u003eEsta implementación utiliza Fusejs, jquery y mark.js\u003c/p\u003e\n\u003ch2 id=\"configuración-inicial\"\u003eConfiguración inicial\u003c/h2\u003e\n\u003cp\u003eLa búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\u003c/p\u003e","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eEste archivo existe únicamente para responder a la URL /search con la plantilla de diseño \u003ccode\u003esearch\u003c/code\u003e relacionada.\u003c/p\u003e\n\u003cp\u003eNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\u003c/p\u003e\n\u003cp\u003eEsta implementación utiliza Fusejs, jquery y mark.js\u003c/p\u003e\n\u003ch2 id=\"configuración-inicial\"\u003eConfiguración inicial\u003c/h2\u003e\n\u003cp\u003eLa búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\u003c/p\u003e","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"height_weight.csv\nOften, a primary goal of data analysis is to show the relationship between two variables. For example, how does the price of an apartment relate to its size? Does its distance from downtown affect the value as well? What about the year of construction or the level of noise in the neighborhood? Scatterplots help us answer such questions by giving us a visual representation of these relationships.\nThe tendency for one variable to change in relation to the change in another variable is called correlation.\nThe scatterplots we made in the last lesson show that height and weight are positively correlated. This makes sense because an increase in one generally means an increase in the other. An example of a negative correlation would be height and voice pitch; generally, the taller you are the lower the frequency of your voice.\nCorrelation coefficient It\u0026rsquo;s one thing to look at a scatter plot, but we also need a numerical way to describe correlation.\nFor this we have the Pearson correlation coefficient, commonly just referred to as the correlation coefficient. It quantifies how one variable tends to change when the other variable changes. The correlation coefficient can take any value between -1 and 1, where -1 represents perfect linear negative correlation and 1 represents perfect linear positive correlation. Generally, it works like this:\nIf one value increases together with the other, the correlation coefficient is positive If one remains the same when the other changes, the coefficient is 0 If one decreases when the other increases, the coefficient is negative The closer the coefficient is to -1 or 1, the stronger the correlation. On the other hand, a value of 0 can mean either that there\u0026rsquo;s no correlation or that there\u0026rsquo;s a complex non-linear connection that the coefficient can\u0026rsquo;t reflect.\nTo help you get a sense of the relationship between the correlation coefficient and the distribution of points in a scatterplot, we’ve included an interactive figure where you can change the correlation coefficient to see how the spread of data points changes.\nNote that there are many different scatterplots that could all result in the same correlation coefficient; this is just meant to be one example.\nQuiz (matching) Description\nMatch each scatterplot to the correlation coefficient that best describes its correlation:\nBins\nQuestions\nA) 0.99\nB) 0.5\nC) 0\nD) -0.5\nE) -0.99\nCalculating the correlation coefficient In pandas, the Pearson correlation coefficient is calculated with the corr() method. It’s applied to the column containing the first variable, and the column with the second is passed as a parameter. It doesn\u0026rsquo;t matter which is which. For example:\nimport pandas as pd from matplotlib import pyplot as plt df = pd.read_csv(\u0026#39;/datasets/height_weight.csv\u0026#39;) print(df[\u0026#39;height\u0026#39;].corr(df[\u0026#39;weight\u0026#39;])) 0.9165261045538688 With a coefficient of about 0.9, height and weight have a strong positive correlation in this dataset. This matches with our “common sense” that taller people tend to weigh more. Of course, there is variation in this trend, so we wouldn’t expect a perfect positive correlation coefficient of 1.\nIt may be tempting to make a statement such as “a person’s height determines their weight”. But on its own, correlation can’t tell us anything about cause and effect; we only know that the two factors are correlated. To prove (or disprove) cause and effect, we would need to perform controlled experiments.\nFor now, let\u0026rsquo;s practice calculating correlation coefficients for other pairs of variables in our dataset.\nTasks Task 1 Remember the scatterplot you made in the last lesson for the 'height' and 'age' columns? Calculate the Pearson correlation coefficient for those columns and assign the result to a variable called ah_corr. Then print it. Does the result align with the scatterplot?\nHint\nCall corr() on either the 'height' or 'age' column of df and pass the other column as an argument. Assign the result to ah_corr, then use print() to display it.\nSuccess text\nAlmost 0 correlation! That jives with the scatterplot. It also makes intuitive sense. The youngest age in this dataset is 25 years old. Most people are done growing by then.\nPrecode\nimport pandas as pd df = pd.read_csv(\u0026#39;/datasets/height_weight.csv\u0026#39;) # write your code here Solution\nimport pandas as pd df = pd.read_csv(\u0026#39;/datasets/height_weight.csv\u0026#39;) ah_corr = df[\u0026#39;height\u0026#39;].corr(df[\u0026#39;age\u0026#39;]) print(ah_corr) Output\n0.010042046516844351 Task 2 Try calling the corr() method on the whole DataFrame. What happens? Print the result.\nHint\nCall corr() on df and wrap it in a print() function.\nSuccess text\nIt looks like pandas returned a DataFrame with the correlation coefficients for each pair of variables. Cool! Let’s learn more about that in the next lesson.\nPrecode\nimport pandas as pd df = pd.read_csv(\u0026#39;/datasets/height_weight.csv\u0026#39;) # write your code here Solution\nimport pandas as pd df = pd.read_csv(\u0026#39;/datasets/height_weight.csv\u0026#39;) print(df.corr()) Output\nheight weight age male height 1.000000 0.916526 0.010042 0.760690 weight 0.916526 1.000000 0.228538 0.785218 age 0.010042 0.228538 1.000000 0.004750 male 0.760690 0.785218 0.004750 1.000000 ","date":"November 16, 2023","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/work/correlation/","summary":"\u003cp\u003e\u003ca href=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/23a50e6b-0e77-47c9-8751-83ce86502b32/height_weight.csv\"\u003eheight_weight.csv\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eOften, a primary goal of data analysis is to show the relationship between two variables. For example, how does the price of an apartment relate to its size? Does its distance from downtown affect the value as well? What about the year of construction or the level of noise in the neighborhood? Scatterplots help us answer such questions by giving us a visual representation of these relationships.\u003c/p\u003e\n\u003cp\u003eThe tendency for one variable to change in relation to the change in another variable is called \u003cstrong\u003ecorrelation\u003c/strong\u003e.\u003c/p\u003e","tags":null,"title":"Correlation"},{"categories":null,"contents":"Datasets gaming_consoles.csv\nWelcome to the culminating challenge of the sprint! You’ve mastered an array of essential concepts and learned basic Python syntax, and now it’s time to work on a Guided Case Study that will bridge theory and practice, transforming your knowledge into tangible problem-solving abilities.\nYou’ll work on a set of tasks and quizzes aimed at analyzing data designed in a way so that you can get hands-on experience and solve real-world problems like those you’ll be handling in your future career. Start when you’re ready, feel free to take breaks and work at your own tempo, and remember, each challenge you overcome is a stepping stone toward becoming a proficient Python programmer!\nScenario A local shop buys, repairs, and sells discontinued electronics. One of their biggest earners is old gaming consoles. The shop has collected historical sales data about these discontinued consoles in order to set prices and help prioritize which ones to repair. Let\u0026rsquo;s take a look at the dataset:\nconsole company release_year discontinued_year release_price units_sold NES Nintendo 1985 1995 179 61910000 Game Boy Nintendo 1989 2003 89.99 118690000 SNES Nintendo 1990 2003 199 49100000 Virtual Boy Nintendo 1995 1996 179.95 770000 Game Boy Advance Nintendo 2001 2010 99.99 81510000 Atari 2600 Atari 1977 1992 199 30000000 Sega Genesis Sega 1988 1997 189 30750000 Game Gear Sega 1990 1997 149.99 10620000 Sega CD Sega 1991 1996 299 2240000 3DO The 3DO Company 1993 1996 699.99 2000000 PlayStation Sony Electronics 1994 2006 299 102490000 PlayStation 2 Sony Electronics 2000 2013 299 155000000 This table contains six columns:\nconsole — the type of gaming console company — the company that manufactured it release_year — the year it was first introduced to the market discontinued_year — the year the company stopped manufacturing it release_price — the cost of the console at its release units_sold — the number of consoles sold over its product run This dataset is a great opportunity to practice working with complex lists in Python while analyzing the relative success of these old gaming consoles.\nTask 1 Here, the dataset is presented to you as a nested list saved in the variable console_data. In future lessons, you\u0026rsquo;ll learn how to load large datasets from files in one line of code. But for now, we\u0026rsquo;re giving you the data in the precode already saved into a variable.\nLet\u0026rsquo;s start out by printing our data to the screen in a nice-looking table format. We can do this by printing each row on its own line and each element at a consistent spacing. This requires using a nested for loop and an f-string in our print() function.\nPrint the output so that each element is left-aligned and has a fixed string length of 20 characters.\nHint\nYour code needs to have two for loops, with one loop nested inside the body of the other. The body of the inner loop should contain one line of code with a print() function that prints an f-string (f'{...}') where the ... is replaced with your loop variable and the correct formatting parameters. After the inner loop, print a new line in the body of the outer loop using print() with no arguments.\nSuccess text\nLook how beautiful that data is. And so much of it! There are other ways to neatly display data on your screen in Python — you\u0026rsquo;ll learn more about those in the future as you start to work with larger datasets.\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Task 2 Now let\u0026rsquo;s go about retrieving specific pieces of data from the table. Use list indexing to print out the row containing data about the Sega CD. Don\u0026rsquo;t worry about formatting the output, just print the whole sublist. Then, on another line, use indexing again to print out the number of Game Boy consoles that were sold over its lifetime.\nHint\nTo print the Sega CD row, use single square brackets to select the correct index in console_data. To print the number of Game Boy consoles sold, use double square brackets to select the correct element from the sublist containing Game Boy data. The number of units sold is the last element in each sublist.\nSuccess text\nGood job. You can find any piece of information you need from this data structure of nested lists. There sure were a lot of Game Boys out there.\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] print(console_data[8]) print(console_data[1][5]) Quiz 1 In the last two tasks, you printed out the full dataset as well as a single row and a single value. With our dataset stored as a nested list, can we also print out a single column? If so, how would we do that?\nNo, because we decided to store the rows as sublists rather than the columns. Printing a column is not as straightforward as printing a row, but we can definitely still do it! We just need to use a for loop. Yes, by using a for loop to print one element from each sublist. That\u0026rsquo;s right! Let\u0026rsquo;s put this into practice in the next task. Yes, by using a for loop to print a sublist at each iteration. It\u0026rsquo;s true that we can use a for loop to print a single column, but printing a whole sublist in each loop iteration will display values from every column. Task 3 Use a for loop to print the first column of the table — the names of the consoles.\nHint\nLoop over the rows of the table (i.e. the sublists in console_data) and print the value at the index that corresponds to the console name in each row. The console names are stored in the first column.\nSuccess text\nYou\u0026rsquo;ve got the Python skills to get anything you need from a list of lists!\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: print(row[0]) The Big Picture So Far You have a dataset stored in a nested list. Each sublist represents a row from the table and each element of a sublist corresponds to a column value from the table. You were able to access specific values from the table using single and double indexing, as well as print a row, a column, or even the entire table. Now you can use these skills to perform table calculations and even add new columns to the table!\nTask 4 The last column in the table stores the number of consoles that were sold over the lifetime of the console. How many consoles of all types were sold in total? Calculate this by using a for loop to sum all the values in the units sold column, saving the result in a variable called total_sold. Then print total_sold to the screen.\nHint\nAssign the value of 0 to total_sold before your for loop. Then write a single for loop to loop over each row in console_data. In each loop iteration, use the correct row index to add the number of units sold to total_sold. After the for loop, call the print() function to print the result stored in total_sold.\nSuccess text\nOver half a billion consoles sold, and that\u0026rsquo;s just for the ones in this dataset! Video games sure are popular. Good job summing a table column. In future courses, you\u0026rsquo;ll learn more advanced techniques to find sums with specific conditions, such as finding the total consoles sold for just Nintendo or just Sega and then comparing them!\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] total_sold = 0 for row in console_data: total_sold = total_sold + row[5] print(total_sold) Quiz 2 We want to use this console dataset to compare the popularity and success of each gaming console. But there isn\u0026rsquo;t a particular column that we can use right off the bat, which makes sense because popularity can be subjective. As analysts, we need to create our own metric to represent popularity. Which of the following metrics do you think may be good indicators of console popularity? Check any and all that apply.\nConsole lifespan Total revenue Consoles sold per year Feedback:\nAll of these ideas could be decent metrics. Notice how all of them require us to perform calculations between columns in our dataset? Ultimately, the metric we choose will depend on the problem we are trying to solve. And if we aren\u0026rsquo;t sure which metric will be the most useful, we can calculate different metrics and compare them, or use them in tandem.\nTask 5 It makes sense that more popular consoles would tend to have a longer lifespan before being discontinued, so let\u0026rsquo;s calculate the lifespan metric and add it as a new column at the end of the dataset.\nTo do this, loop over each row in console_data and calculate the lifespan in years using the released year and discontinued year columns. Don\u0026rsquo;t forget to append the result to each row in order to create the new column.\nWe\u0026rsquo;ve included a separate for loop in the precode to print your results, but the for loop that calculates the lifespan should come before this one.\nHint\nWrite a single for loop to iterate over each row in console_data. In the body of the loop, calculate the lifespan by using the correct row indices to subtract the released year from the discontinued year. Also in the body of the loop, use the append() method to append the lifespan to the row sublist. Don\u0026rsquo;t change the for loop already given in the precode.\nSuccess text\nGreat! You\u0026rsquo;ve expanded your dataset by creating a column that contains one of your analysis metrics. That last column is the lifespan of each console in years.\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here # this code will print your result table for row in console_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: lifespan = row[3] - row[2] row.append(lifespan) for row in console_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Task 6 We\u0026rsquo;ve successfully calculated our first metric and added it to our dataset as a new column. But the values are all over the place, which makes it cumbersome to compare between consoles. We can fix this by sorting our data!\nThe code to create the lifespan column from the last task is provided for you here in the precode, as is the code to print your result. Add a line of code to sort console_data by the new lifespan column in order from longest to shortest, and save the result in a variable called sorted_lifespan_data. We’ve created the key() function for you to help you sort the values according to the correct element. Include this in your sorting function like so: key=key.\nHint\nUse the sorted() function with three arguments to sort your data: console_data, key=, and reverse=. Use the key function in the precode: key=key. By default, sorted() sorts numerical values from least to greatest, so make sure to use the correct argument to sort in reverse order.\nSuccess text\nThat\u0026rsquo;s quite a range of lifespans. It looks like the Atari is the wise sage of the group and the Virtual Boy is\u0026hellip; well, we don\u0026rsquo;t talk about the Virtual Boy.\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: lifespan = row[3] - row[2] row.append(lifespan) def key(row): return row[-1] # write your code here # this code will print your result table for row in sorted_lifespan_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: lifespan = row[3] - row[2] row.append(lifespan) def key(row): return row[-1] sorted_lifespan_data = sorted(console_data, key=key, reverse=True) # this code will print your result table for row in sorted_lifespan_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() The Big Picture So Far Not only have you shown that you can display your data and select pieces of it using nested list indexing, you\u0026rsquo;ve also successfully performed calculations using columns in your dataset. You performed a single-column calculation when you summed the values in the units sold column to determine the total number of all consoles that were sold. And you performed a multi-column calculation when you subtracted the release year column from the discontinued year column to determine the lifespan metric for each console. Finally, you displayed your metric in an easy-to-understand way by sorting the data before printing it out. Now let\u0026rsquo;s put it all together by calculating another metric: adding the result as a column in our table, and sorting the result all in one go!\nTask 7 Calculate a new metric, total revenue, which we will estimate as the product of release price and the total number of units sold (the last two values in each row). Use a for loop over the rows of console_data to calculate the total revenue and append the result to the end of each row.\nThe precode already contains code to sort and print your final result, so leave that as is.\nHint\nThis task is bringing together what you did in the previous two tasks, but with a different metric — so use those two tasks as a template if you get stuck. Your code should have a single for loop that calculates total revenue as the multiplication of the release price and units sold columns for each row in console_data and then appends that result to the end of the row.\nSuccess text\nYou have successfully calculated another metric and included the result in your dataset! So, which is a better metric, console lifetime or total revenue? It depends on the problem at hand, but it\u0026rsquo;s always good to have options.\nPrecode\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] # write your code here console_data = # this code will sort your results sorted_revenue_data = sorted(console_data, key=lambda row: row[-1], reverse=True) # this code will print your result table for row in sorted_revenue_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Solution\nconsole_data = [[\u0026#39;NES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1985, 1995, 179.0, 61910000], [\u0026#39;Game Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1989, 2003, 89.99, 118690000], [\u0026#39;SNES\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1990, 2003, 199.0, 49100000], [\u0026#39;Virtual Boy\u0026#39;, \u0026#39;Nintendo\u0026#39;, 1995, 1996, 179.95, 770000], [\u0026#39;Game Boy Advance\u0026#39;, \u0026#39;Nintendo\u0026#39;, 2001, 2010, 99.99, 81510000], [\u0026#39;Atari 2600\u0026#39;, \u0026#39;Atari\u0026#39;, 1977, 1992, 199.0, 30000000], [\u0026#39;Sega Genesis\u0026#39;, \u0026#39;Sega\u0026#39;, 1988, 1997, 189.0, 30750000], [\u0026#39;Game Gear\u0026#39;, \u0026#39;Sega\u0026#39;, 1990, 1997, 149.99, 10620000], [\u0026#39;Sega CD\u0026#39;, \u0026#39;Sega\u0026#39;, 1991, 1996, 299.0, 2240000], [\u0026#39;3DO\u0026#39;, \u0026#39;The 3DO Company\u0026#39;, 1993, 1996, 699.99, 2000000], [\u0026#39;PlayStation\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 1994, 2006, 299.0, 102490000], [\u0026#39;PlayStation 2\u0026#39;, \u0026#39;Sony Electronics\u0026#39;, 2000, 2013, 299.0, 155000000]] for row in console_data: total_revenue = row[4] * row[5] row.append(total_revenue) sorted_revenue_data = sorted(console_data, key=lambda row: row[-1], reverse=True) # this code will print your result table for row in sorted_revenue_data: for elem in row: print(f\u0026#39;{elem:\u0026lt;20}\u0026#39;, end=\u0026#39;\u0026#39;) print() Summary Nested lists are complex data structures that can take some getting used to, but you\u0026rsquo;re getting the hang of it. In future lessons, you\u0026rsquo;ll learn about more sophisticated data structures in Python to store and work with tables, but the skills you learned here will go a long way in helping you work with them effectively. Writing for loops and nested for loops, performing nested list indexing, formatted printing, and column calculations are just some of the skills you used in this guided case study.\nYou were also introduced to the concept of metrics, which are essential in evaluating your analysis and making informed business decisions. As an analyst, you have to be creative in deciding on your metrics because a good metric depends both on the data you have available and the problem that you\u0026rsquo;re trying to solve.\n","date":"November 16, 2023","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/work/gcs/","summary":"\u003ch2 id=\"datasets\"\u003eDatasets\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/90f1bbbf-e3a9-4a77-b562-c998d5dd2d1d/gaming_consoles.csv\"\u003egaming_consoles.csv\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eWelcome to the culminating challenge of the sprint! You’ve mastered an array of essential concepts and learned basic Python syntax, and now it’s time to work on a Guided Case Study that will bridge theory and practice, transforming your knowledge into tangible problem-solving abilities.\u003c/p\u003e\n\u003cp\u003eYou’ll work on a set of tasks and quizzes aimed at analyzing data designed in a way so that you can get hands-on experience and solve real-world problems like those you’ll be handling in your future career. Start when you’re ready, feel free to take breaks and work at your own tempo, and remember, each challenge you overcome is a stepping stone toward becoming a proficient Python programmer!\u003c/p\u003e","tags":null,"title":"Guided Case Study: Basic Python"},{"categories":null,"contents":"Data Science \u0026amp; Data Analytics Program Content I have written, edited, and designed elements for optimizing the student learning experience in over 300 lessons for TripleTen\u0026rsquo;s Data Science and Data Analytics bootcamps.\nYou can find two example lessons at the links below:\nGuided Case Study: Basic Python Correlation Interactives To make lessons more engaging, I worked with a designer to develop a series of over 40 interactive widgets aimed at helping students get an intuitive understanding of the material.\nYou can find some samples here.\nStudent Reports I piloted a project for auto-generating student learning reports on a weekly basis.\nFor this project, I built a pipeline for regular analysis on student behavior and learning performance, the results of which were fed into a React-based template I designed, and links were sent to each of our students at the start of each week (about 200 students each week).\nYou can see a mock example of one of the reports here.\n","date":"November 16, 2023","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/work/sample/","summary":"\u003ch2 id=\"data-science--data-analytics-program-content\"\u003eData Science \u0026amp; Data Analytics Program Content\u003c/h2\u003e\n\u003cp\u003eI have written, edited, and designed elements for optimizing the student learning experience in over 300 lessons for TripleTen\u0026rsquo;s Data Science and Data Analytics bootcamps.\u003c/p\u003e\n\u003cp\u003eYou can find two example lessons at the links below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/work/gcs/\"\u003eGuided Case Study: Basic Python\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/work/correlation/\"\u003eCorrelation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"interactives\"\u003eInteractives\u003c/h2\u003e\n\u003cp\u003eTo make lessons more engaging, I worked with a designer to develop a series of over 40 interactive widgets aimed at helping students get an intuitive understanding of the material.\u003c/p\u003e","tags":null,"title":"My Projects"},{"categories":null,"contents":"Working with dates and times Statistical Data Analysis Project Descriptive Statistics ","date":"March 26, 2023","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/posts/videos/","summary":"\u003ch3 id=\"working-with-dates-and-times\"\u003eWorking with dates and times\u003c/h3\u003e\n\u003ciframe width=\"100%\" height=\"900\" src=\"https://youtube.com/embed/VKjciJDUvEU\" title=\"dates_times\" frameborder=\"0\" allow=\"accelerometer; clipboard-write;\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003chr\u003e\n\u003ch3 id=\"statistical-data-analysis-project\"\u003eStatistical Data Analysis Project\u003c/h3\u003e\n\u003ciframe width=\"100%\" height=\"650\" src=\"https://youtube.com/embed/MHxU_8d2dGk\" title=\"SDA\" frameborder=\"0\" allow=\"accelerometer; clipboard-write;\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003chr\u003e\n\u003ch3 id=\"descriptive-statistics\"\u003eDescriptive Statistics\u003c/h3\u003e\n\u003ciframe width=\"100%\" height=\"900\" src=\"https://youtube.com/embed/PFtGG8gH-E8\" title=\"histogram\" frameborder=\"0\" allow=\"accelerometer; clipboard-write;\" allowfullscreen\u003e\u003c/iframe\u003e","tags":null,"title":"Some Educational Videos I've Designed"},{"categories":null,"contents":"Practice with .loc Best viewed on desktop\nChanging the parameters of the normal distribution Histograms ","date":"March 26, 2023","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/posts/interactives/","summary":"\u003ch3 id=\"practice-with-loc\"\u003ePractice with \u003ccode\u003e.loc\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eBest viewed on desktop\u003c/p\u003e\n\u003ciframe width=\"100%\" height=\"900\" src=\"https://code.s3.yandex.net/data-analyst-eng/widgets/loc.dist/loc.html\" title=\"loc\" frameborder=\"0\"\u003e\u003c/iframe\u003e\n\u003chr\u003e\n\u003ch3 id=\"changing-the-parameters-of-the-normal-distribution\"\u003eChanging the parameters of the normal distribution\u003c/h3\u003e\n\u003ciframe width=\"100%\" height=\"650\" src=\"https://code.s3.yandex.net/data-analyst/widgets/ND_dist_all/nd_01_page.html\" title=\"normdist\" frameborder=\"0\" allow=\"accelerometer; clipboard-write;\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003chr\u003e\n\u003ch3 id=\"histograms\"\u003eHistograms\u003c/h3\u003e\n\u003ciframe width=\"100%\" height=\"900\" src=\"https://code.s3.yandex.net/data-analyst/widgets/histogramm02_dist/histogramm02.html\" title=\"histogram\" frameborder=\"0\" allow=\"accelerometer; clipboard-write;\" allowfullscreen\u003e\u003c/iframe\u003e","tags":null,"title":"Some Interactives I've Designed"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/search/","summary":"\u003cp\u003eThis file exists solely to respond to /search URL with the related \u003ccode\u003esearch\u003c/code\u003e layout template.\u003c/p\u003e\n\u003cp\u003eNo content shown here is rendered, all content is based in the template layouts/page/search.html\u003c/p\u003e\n\u003cp\u003eSetting a very low sitemap priority will tell search engines this is not important content.\u003c/p\u003e\n\u003cp\u003eThis implementation uses Fusejs, jquery and mark.js\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eSearch  depends on additional output content type of JSON in config.toml\n```\n[outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;]\n```\u003c/p\u003e","tags":null,"title":"Search Results"}]